<tool id="de_novo_asmbl" name="Velvet" version="1.2.10">
 <command interpreter="python"> velvet.py -k $khmer -o $output 
				#if $varExists('pinput'):
				  -p $pinput
				#end if

				#if $varExists('sinput'):
				  -s $sinput
				#end if
				</command>
 <inputs>
	<conditional name="single_paired" >
	<param type="select" name="datatype" label="input format">
		<option value="paired">Interleaved paired-end reads</option>
		<option value="single">Single-end reads</option>
		<option value="both">Interleaved paired-end reads AND Single-end reads</option>
	</param>

	<when value="paired">
 		<param type="data" format="fasta,fastq" name="pinput" label= "Input file"/>
	</when>
	
	<when value="single">
        	<param type="data" format="fasta,fastq" name="sinput" label="Input file" />
	</when>

	<when value="both">
		<param type="data" format="fasta,fastq" name="pinput" label="Paired-end input file" help="only reads shorter than 500bp are accepted"/>
		<param type="data" format="fasta,fastq" name="sinput" label="Single-end input file" help="only reads shorter than 500bp are accepted"/>
	</when>
	</conditional>

	<param type="text" name="khmer" size="30" label="k-mer(s) used in velvet assembly" help="put one or more k-mer sizes, like: 21,25,29; k-mer needs to be an odd number and can not exceed 91.  K-mers should be seperated by commas, without any blanks in between" />

 </inputs>

 <outputs>
 	<data name="output" format="fasta" label="${tool.name} on ${on_string}.fa"/>
 </outputs>

	<help>

**What is Velvet**

Velvet is one of the earliest yet still most popular de Bruijn graph-based algorithm based de novo genome assemblers especially designed for short read seuqncing technologies. Velvet takes in short read sequences (either single-end or paired-end) and produces high quality unique contigs.  Velvet also contains builtd-in error removals and scaffolding modules. Velvet is our default de novo assembler in the full VirAmp pipeline.

For more details, please go to http://www.ebi.ac.uk/~zerbino/velvet/

---------

**What to input**

1. Here we require that you combine datasets of similar kind into one file and that you submit at most one single-end sequence file and one paired-end sequence file.  This means if you have the paired-end reads separated in two files (e.g. forward and reverse, as outputted by Illumina sequencers), you will need to combine them together into **one** interleaved file.  We provide a tool for this task under **UTILITY** section.

2. Please fill in one or more odd numbers as the k-mer size, separated by commas (no spaces), Each k-mer length should be less than 91.

3. Please indicate your dataset format: choose from FASTA or FASTQ

---------

**Expected Result**

A set of contigs is produced in FASTA format.  If multiple k-mers are provided, the results from several rounds (using different k-mer sizes) will be combined into one file.

---------

**Reference**

Velvet: algorithms for de novo short read assembly using de Bruijn graphs. D.R. Zerbino and E. Birney. Genome Research 18:821-829.

	</help>

</tool>


